AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Auth0 + API Gateway + Lambda Authorizer PoC (Python Version)

Globals:
  Function:
    Timeout: 10
    Runtime: python3.13

Resources:
  AuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      CodeUri: authorizer/
      Description: JWT verification Lambda authorizer using Auth0
      Policies:
        - AWSLambdaBasicExecutionRole

  BackendFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      CodeUri: backend/
      Description: Protected backend Lambda
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /hello
            Method: get
            RestApiId: !Ref ApiGateway

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Auth:
        DefaultAuthorizer: LambdaTokenAuthorizer
        Authorizers:
          LambdaTokenAuthorizer:
            FunctionArn: !GetAtt AuthorizerFunction.Arn
            Identity:
              Header: Authorization
      DefinitionBody:
        swagger: "2.0"
        info:
          title: "Auth0 API Gateway PoC"
          version: "1.0"
        paths:
          /hello:
            get:
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BackendFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy
              security:
                - LambdaTokenAuthorizer: []

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/hello"